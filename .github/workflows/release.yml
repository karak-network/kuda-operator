name: Build and release operator binaries

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"

permissions:
  contents: write

env:
  CARGO_TERM_COLOR: always
  VERSION: ${{ github.ref_name }}

jobs:
  build-release:
    name: build-release
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - build: linux-x86_64
            os: ubuntu-latest
            rust: stable
            target: x86_64-unknown-linux-gnu
            name: kuda-operator-linux-x86_64
          - build: linux-aarch64
            os: ubuntu-latest
            rust: stable
            target: aarch64-unknown-linux-gnu
            name: kuda-operator-linux-aarch64
          - build: macos-aarch64
            os: macos-latest
            rust: stable
            target: aarch64-apple-darwin
            name: kuda-operator-macos-aarch64

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install packages (Linux x86_64)
        if: matrix.build == 'linux-x86_64'
        shell: bash
        run: |
          apt-get update && apt-get install -y protobuf-compiler

      - name: Install packages (MacOS aarch64)
        if: matrix.build == 'macos-aarch64'
        shell: bash
        run: |
          brew update && brew install protobuf

      - name: Install Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
          target: ${{ matrix.target }}

      - name: Cargo build
        run: cargo build --package kuda-operator --release --target ${{ matrix.target }}

      - name: Post Build | Prepare artifacts
        run: |
          mkdir ${{ matrix.name }}
          cp target/${{ matrix.target }}/release/kuda-operator ${{ matrix.name }}
          cp target/${{ matrix.target }}/release/kuda-operator-register ${{ matrix.name }}
          tar czvf ${{ matrix.name }}.tar.gz ${{ matrix.name }}
          shasum -a 256 ${{ matrix.name }} > ${{ matrix.name }}.sha256

      - name: Release | Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }}
          path: ${{ matrix.name }}

  upload_artifacts:
    name: Add Build Artifacts to Release
    needs: [build-release]
    runs-on: ubuntu-latest
    steps:
      - name: Setup | Artifacts
        uses: actions/download-artifact@v4

      - name: Setup | Publish Release
        run: gh release edit ${{ env.VERSION }} --draft=false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build | Add Artifacts to Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            kuda-operator-*/kuda-operator-*
          tag_name: ${{ env.VERSION }}
