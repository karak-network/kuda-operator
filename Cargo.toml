[package]
name = "kuda-operator"
version = "0.1.0"
edition = "2021"
authors = ["Karak Network"]
repository = "https://github.com/karak-network/kuda-operator.git"
description = "KUDA Operator"
license = "BUSL-1.1"

[dependencies]
alloy = { version = "0.4.2", features = [
    "full",
    "network",
    "signer-aws",
    "signer-keystore",
] }
aws-config = "1.5.8"
aws-sdk-kms = "1.47.0"
axum = "0.7.6"
base64 = "0.22.1"
borsh = { version = "1.5.1", features = ["derive"] }
c-kzg = "1.0.2"
celestia-rpc = "0.6.0"
celestia-types = "0.6.1"
clap = { version = "4.5.20", features = ["color", "derive", "env"] }
dotenvy = "0.15.7"
envy = "0.4.2"
eth-keystore = "0.5.0"
eyre = "0.6.12"
futures-util = "0.3.30"
hex = { version = "0.4.3", features = ["serde"] }
nmt-rs = { version = "0.2.3", features = ["borsh"] }
regex = "1.10.5"
reqwest = "0.12.5"
rpassword = "7.3.1"
rust_socketio = { version = "0.6.0", features = ["async", "async-callbacks"] }
serde = { version = "1.0.204", features = ["derive"] }
serde_json = "1.0.120"
serde_with = "3.9.0"
tokio = { version = "1.38.0", features = ["full"] }
tokio-util = "0.7.11"
tower = "0.5.1"
tower-http = { version = "0.6.1", features = ["trace"] }
tower_governor = "0.4.2"
tracing = "0.1.40"
tracing-subscriber = { version = "0.3.18", features = ["env-filter"] }
url = { version = "2.5.2", features = ["serde"] }
uuid = { version = "1.10.0", features = ["serde", "v4"] }

[[bin]]
name = "kuda-operator"
path = "src/main.rs"

[[bin]]
name = "kuda-operator-register"
path = "src/register.rs"

# The profile that 'cargo dist' will build with
[profile.dist]
inherits = "release"
lto = "thin"

# Config for 'cargo dist'
[workspace.metadata.dist]
# The preferred cargo-dist version to use in CI (Cargo.toml SemVer syntax)
cargo-dist-version = "0.22.1"
# CI backends to support
ci = "github"
# The installers to generate for each app
installers = ["shell"]
# Target platforms to build apps for (Rust target-triple syntax)
targets = ["aarch64-apple-darwin", "aarch64-unknown-linux-gnu", "x86_64-unknown-linux-gnu"]
# Path that installers should place binaries in
install-path = "~/.karak/bin"
# Whether to install an updater program
install-updater = false
# Where to host releases
hosting = "github"
# Whether to enable GitHub Attestations
github-attestations = true
# Which actions to run on pull requests
pr-run-mode = "upload"

[workspace.metadata.dist.github-custom-runners]
aarch64-apple-darwin = "macos-latest"
aarch64-unknown-linux-gnu = "buildjet-2vcpu-ubuntu-2204-arm"
x86_64-unknown-linux-gnu = "ubuntu-latest"

[workspace.metadata.dist.dependencies.homebrew]
protobuf = { version = '*', targets = ["aarch64-apple-darwin"] }

[workspace.metadata.dist.dependencies.apt]
protobuf-compiler = { version = '*', targets = ["x86_64-unknown-linux-gnu"] }
