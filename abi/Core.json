[
  {
    "type": "constructor",
    "inputs": [],
    "stateMutability": "nonpayable"
  },
  {
    "type": "function",
    "name": "VERSION",
    "inputs": [],
    "outputs": [
      {
        "name": "",
        "type": "string",
        "internalType": "string"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "allowlistAssets",
    "inputs": [
      {
        "name": "assets",
        "type": "address[]",
        "internalType": "address[]"
      },
      {
        "name": "slashingHandlers",
        "type": "address[]",
        "internalType": "address[]"
      }
    ],
    "outputs": [],
    "stateMutability": "nonpayable"
  },
  {
    "type": "function",
    "name": "allowlistVaultImpl",
    "inputs": [
      {
        "name": "vaultImpl",
        "type": "address",
        "internalType": "address"
      }
    ],
    "outputs": [],
    "stateMutability": "nonpayable"
  },
  {
    "type": "function",
    "name": "cancelOwnershipHandover",
    "inputs": [],
    "outputs": [],
    "stateMutability": "payable"
  },
  {
    "type": "function",
    "name": "cancelSlashing",
    "inputs": [
      {
        "name": "queuedSlashing",
        "type": "tuple",
        "internalType": "struct SlasherLib.QueuedSlashing",
        "components": [
          {
            "name": "dss",
            "type": "address",
            "internalType": "contract IDSS"
          },
          {
            "name": "timestamp",
            "type": "uint96",
            "internalType": "uint96"
          },
          {
            "name": "operator",
            "type": "address",
            "internalType": "address"
          },
          {
            "name": "vaults",
            "type": "address[]",
            "internalType": "address[]"
          },
          {
            "name": "slashPercentagesWad",
            "type": "uint96[]",
            "internalType": "uint96[]"
          },
          {
            "name": "nonce",
            "type": "uint256",
            "internalType": "uint256"
          }
        ]
      }
    ],
    "outputs": [],
    "stateMutability": "nonpayable"
  },
  {
    "type": "function",
    "name": "changeImplementationForVault",
    "inputs": [
      {
        "name": "vault",
        "type": "address",
        "internalType": "address"
      },
      {
        "name": "newVaultImpl",
        "type": "address",
        "internalType": "address"
      }
    ],
    "outputs": [],
    "stateMutability": "nonpayable"
  },
  {
    "type": "function",
    "name": "changeStandardImplementation",
    "inputs": [
      {
        "name": "newVaultImpl",
        "type": "address",
        "internalType": "address"
      }
    ],
    "outputs": [],
    "stateMutability": "nonpayable"
  },
  {
    "type": "function",
    "name": "completeOwnershipHandover",
    "inputs": [
      {
        "name": "pendingOwner",
        "type": "address",
        "internalType": "address"
      }
    ],
    "outputs": [],
    "stateMutability": "payable"
  },
  {
    "type": "function",
    "name": "deployVaults",
    "inputs": [
      {
        "name": "vaultConfigs",
        "type": "tuple[]",
        "internalType": "struct VaultLib.Config[]",
        "components": [
          {
            "name": "asset",
            "type": "address",
            "internalType": "address"
          },
          {
            "name": "decimals",
            "type": "uint8",
            "internalType": "uint8"
          },
          {
            "name": "operator",
            "type": "address",
            "internalType": "address"
          },
          {
            "name": "name",
            "type": "string",
            "internalType": "string"
          },
          {
            "name": "symbol",
            "type": "string",
            "internalType": "string"
          },
          {
            "name": "extraData",
            "type": "bytes",
            "internalType": "bytes"
          }
        ]
      },
      {
        "name": "vaultImpl",
        "type": "address",
        "internalType": "address"
      }
    ],
    "outputs": [
      {
        "name": "vaults",
        "type": "address[]",
        "internalType": "contract IKarakBaseVault[]"
      }
    ],
    "stateMutability": "nonpayable"
  },
  {
    "type": "function",
    "name": "extSloads",
    "inputs": [
      {
        "name": "slots",
        "type": "bytes32[]",
        "internalType": "bytes32[]"
      }
    ],
    "outputs": [
      {
        "name": "res",
        "type": "bytes32[]",
        "internalType": "bytes32[]"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "fetchVaultsStakedInDSS",
    "inputs": [
      {
        "name": "operator",
        "type": "address",
        "internalType": "address"
      },
      {
        "name": "dss",
        "type": "address",
        "internalType": "contract IDSS"
      }
    ],
    "outputs": [
      {
        "name": "vaults",
        "type": "address[]",
        "internalType": "address[]"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "finalizeSlashing",
    "inputs": [
      {
        "name": "queuedSlashing",
        "type": "tuple",
        "internalType": "struct SlasherLib.QueuedSlashing",
        "components": [
          {
            "name": "dss",
            "type": "address",
            "internalType": "contract IDSS"
          },
          {
            "name": "timestamp",
            "type": "uint96",
            "internalType": "uint96"
          },
          {
            "name": "operator",
            "type": "address",
            "internalType": "address"
          },
          {
            "name": "vaults",
            "type": "address[]",
            "internalType": "address[]"
          },
          {
            "name": "slashPercentagesWad",
            "type": "uint96[]",
            "internalType": "uint96[]"
          },
          {
            "name": "nonce",
            "type": "uint256",
            "internalType": "uint256"
          }
        ]
      }
    ],
    "outputs": [],
    "stateMutability": "nonpayable"
  },
  {
    "type": "function",
    "name": "finalizeUpdateVaultStakeInDSS",
    "inputs": [
      {
        "name": "queuedStake",
        "type": "tuple",
        "internalType": "struct Operator.QueuedStakeUpdate",
        "components": [
          {
            "name": "nonce",
            "type": "uint48",
            "internalType": "uint48"
          },
          {
            "name": "startTimestamp",
            "type": "uint48",
            "internalType": "uint48"
          },
          {
            "name": "operator",
            "type": "address",
            "internalType": "address"
          },
          {
            "name": "updateRequest",
            "type": "tuple",
            "internalType": "struct Operator.StakeUpdateRequest",
            "components": [
              {
                "name": "vault",
                "type": "address",
                "internalType": "address"
              },
              {
                "name": "dss",
                "type": "address",
                "internalType": "contract IDSS"
              },
              {
                "name": "toStake",
                "type": "bool",
                "internalType": "bool"
              }
            ]
          }
        ]
      }
    ],
    "outputs": [],
    "stateMutability": "nonpayable"
  },
  {
    "type": "function",
    "name": "getDssMaxSlashablePercentageWad",
    "inputs": [
      {
        "name": "dss",
        "type": "address",
        "internalType": "contract IDSS"
      }
    ],
    "outputs": [
      {
        "name": "slashablePercentageWad",
        "type": "uint256",
        "internalType": "uint256"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "getLeverage",
    "inputs": [
      {
        "name": "vault",
        "type": "address",
        "internalType": "address"
      }
    ],
    "outputs": [
      {
        "name": "leverage",
        "type": "uint256",
        "internalType": "uint256"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "getOperatorVaults",
    "inputs": [
      {
        "name": "operator",
        "type": "address",
        "internalType": "address"
      }
    ],
    "outputs": [
      {
        "name": "vaults",
        "type": "address[]",
        "internalType": "address[]"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "grantRoles",
    "inputs": [
      {
        "name": "user",
        "type": "address",
        "internalType": "address"
      },
      {
        "name": "roles",
        "type": "uint256",
        "internalType": "uint256"
      }
    ],
    "outputs": [],
    "stateMutability": "payable"
  },
  {
    "type": "function",
    "name": "hasAllRoles",
    "inputs": [
      {
        "name": "user",
        "type": "address",
        "internalType": "address"
      },
      {
        "name": "roles",
        "type": "uint256",
        "internalType": "uint256"
      }
    ],
    "outputs": [
      {
        "name": "",
        "type": "bool",
        "internalType": "bool"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "hasAnyRole",
    "inputs": [
      {
        "name": "user",
        "type": "address",
        "internalType": "address"
      },
      {
        "name": "roles",
        "type": "uint256",
        "internalType": "uint256"
      }
    ],
    "outputs": [
      {
        "name": "",
        "type": "bool",
        "internalType": "bool"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "implementation",
    "inputs": [],
    "outputs": [
      {
        "name": "",
        "type": "address",
        "internalType": "address"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "implementation",
    "inputs": [
      {
        "name": "vault",
        "type": "address",
        "internalType": "address"
      }
    ],
    "outputs": [
      {
        "name": "",
        "type": "address",
        "internalType": "address"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "initialize",
    "inputs": [
      {
        "name": "_vaultImpl",
        "type": "address",
        "internalType": "address"
      },
      {
        "name": "_manager",
        "type": "address",
        "internalType": "address"
      },
      {
        "name": "_vetoCommittee",
        "type": "address",
        "internalType": "address"
      },
      {
        "name": "_hookCallGasLimit",
        "type": "uint32",
        "internalType": "uint32"
      },
      {
        "name": "_supportsInterfaceGasLimit",
        "type": "uint32",
        "internalType": "uint32"
      },
      {
        "name": "_hookGasBuffer",
        "type": "uint32",
        "internalType": "uint32"
      }
    ],
    "outputs": [],
    "stateMutability": "nonpayable"
  },
  {
    "type": "function",
    "name": "isAssetAllowlisted",
    "inputs": [
      {
        "name": "asset",
        "type": "address",
        "internalType": "address"
      }
    ],
    "outputs": [
      {
        "name": "",
        "type": "bool",
        "internalType": "bool"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "isDSSRegistered",
    "inputs": [
      {
        "name": "dss",
        "type": "address",
        "internalType": "contract IDSS"
      }
    ],
    "outputs": [
      {
        "name": "",
        "type": "bool",
        "internalType": "bool"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "isOperatorRegisteredToDSS",
    "inputs": [
      {
        "name": "operator",
        "type": "address",
        "internalType": "address"
      },
      {
        "name": "dss",
        "type": "address",
        "internalType": "contract IDSS"
      }
    ],
    "outputs": [
      {
        "name": "",
        "type": "bool",
        "internalType": "bool"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "isVaultImplAllowListed",
    "inputs": [
      {
        "name": "vaultImpl",
        "type": "address",
        "internalType": "address"
      }
    ],
    "outputs": [
      {
        "name": "",
        "type": "bool",
        "internalType": "bool"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "isVaultQueuedForSlashing",
    "inputs": [
      {
        "name": "vault",
        "type": "address",
        "internalType": "address"
      }
    ],
    "outputs": [
      {
        "name": "",
        "type": "bool",
        "internalType": "bool"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "owner",
    "inputs": [],
    "outputs": [
      {
        "name": "result",
        "type": "address",
        "internalType": "address"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "ownershipHandoverExpiresAt",
    "inputs": [
      {
        "name": "pendingOwner",
        "type": "address",
        "internalType": "address"
      }
    ],
    "outputs": [
      {
        "name": "result",
        "type": "uint256",
        "internalType": "uint256"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "pause",
    "inputs": [
      {
        "name": "map",
        "type": "uint256",
        "internalType": "uint256"
      }
    ],
    "outputs": [],
    "stateMutability": "nonpayable"
  },
  {
    "type": "function",
    "name": "pauseVault",
    "inputs": [
      {
        "name": "vault",
        "type": "address",
        "internalType": "contract IKarakBaseVault"
      },
      {
        "name": "map",
        "type": "uint256",
        "internalType": "uint256"
      }
    ],
    "outputs": [],
    "stateMutability": "nonpayable"
  },
  {
    "type": "function",
    "name": "paused",
    "inputs": [
      {
        "name": "index",
        "type": "uint8",
        "internalType": "uint8"
      }
    ],
    "outputs": [
      {
        "name": "",
        "type": "bool",
        "internalType": "bool"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "paused",
    "inputs": [],
    "outputs": [
      {
        "name": "",
        "type": "bool",
        "internalType": "bool"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "pausedMap",
    "inputs": [],
    "outputs": [
      {
        "name": "",
        "type": "uint256",
        "internalType": "uint256"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "registerDSS",
    "inputs": [
      {
        "name": "maxSlashablePercentageWad",
        "type": "uint256",
        "internalType": "uint256"
      }
    ],
    "outputs": [],
    "stateMutability": "nonpayable"
  },
  {
    "type": "function",
    "name": "registerOperatorToDSS",
    "inputs": [
      {
        "name": "dss",
        "type": "address",
        "internalType": "contract IDSS"
      },
      {
        "name": "registrationHookData",
        "type": "bytes",
        "internalType": "bytes"
      }
    ],
    "outputs": [],
    "stateMutability": "nonpayable"
  },
  {
    "type": "function",
    "name": "renounceOwnership",
    "inputs": [],
    "outputs": [],
    "stateMutability": "payable"
  },
  {
    "type": "function",
    "name": "renounceRoles",
    "inputs": [
      {
        "name": "roles",
        "type": "uint256",
        "internalType": "uint256"
      }
    ],
    "outputs": [],
    "stateMutability": "payable"
  },
  {
    "type": "function",
    "name": "requestOwnershipHandover",
    "inputs": [],
    "outputs": [],
    "stateMutability": "payable"
  },
  {
    "type": "function",
    "name": "requestSlashing",
    "inputs": [
      {
        "name": "slashingRequest",
        "type": "tuple",
        "internalType": "struct SlasherLib.SlashRequest",
        "components": [
          {
            "name": "operator",
            "type": "address",
            "internalType": "address"
          },
          {
            "name": "slashPercentagesWad",
            "type": "uint96[]",
            "internalType": "uint96[]"
          },
          {
            "name": "vaults",
            "type": "address[]",
            "internalType": "address[]"
          }
        ]
      }
    ],
    "outputs": [
      {
        "name": "queuedSlashing",
        "type": "tuple",
        "internalType": "struct SlasherLib.QueuedSlashing",
        "components": [
          {
            "name": "dss",
            "type": "address",
            "internalType": "contract IDSS"
          },
          {
            "name": "timestamp",
            "type": "uint96",
            "internalType": "uint96"
          },
          {
            "name": "operator",
            "type": "address",
            "internalType": "address"
          },
          {
            "name": "vaults",
            "type": "address[]",
            "internalType": "address[]"
          },
          {
            "name": "slashPercentagesWad",
            "type": "uint96[]",
            "internalType": "uint96[]"
          },
          {
            "name": "nonce",
            "type": "uint256",
            "internalType": "uint256"
          }
        ]
      }
    ],
    "stateMutability": "nonpayable"
  },
  {
    "type": "function",
    "name": "requestUpdateVaultStakeInDSS",
    "inputs": [
      {
        "name": "vaultStakeUpdateRequest",
        "type": "tuple",
        "internalType": "struct Operator.StakeUpdateRequest",
        "components": [
          {
            "name": "vault",
            "type": "address",
            "internalType": "address"
          },
          {
            "name": "dss",
            "type": "address",
            "internalType": "contract IDSS"
          },
          {
            "name": "toStake",
            "type": "bool",
            "internalType": "bool"
          }
        ]
      }
    ],
    "outputs": [
      {
        "name": "updatedStake",
        "type": "tuple",
        "internalType": "struct Operator.QueuedStakeUpdate",
        "components": [
          {
            "name": "nonce",
            "type": "uint48",
            "internalType": "uint48"
          },
          {
            "name": "startTimestamp",
            "type": "uint48",
            "internalType": "uint48"
          },
          {
            "name": "operator",
            "type": "address",
            "internalType": "address"
          },
          {
            "name": "updateRequest",
            "type": "tuple",
            "internalType": "struct Operator.StakeUpdateRequest",
            "components": [
              {
                "name": "vault",
                "type": "address",
                "internalType": "address"
              },
              {
                "name": "dss",
                "type": "address",
                "internalType": "contract IDSS"
              },
              {
                "name": "toStake",
                "type": "bool",
                "internalType": "bool"
              }
            ]
          }
        ]
      }
    ],
    "stateMutability": "nonpayable"
  },
  {
    "type": "function",
    "name": "revokeRoles",
    "inputs": [
      {
        "name": "user",
        "type": "address",
        "internalType": "address"
      },
      {
        "name": "roles",
        "type": "uint256",
        "internalType": "uint256"
      }
    ],
    "outputs": [],
    "stateMutability": "payable"
  },
  {
    "type": "function",
    "name": "rolesOf",
    "inputs": [
      {
        "name": "user",
        "type": "address",
        "internalType": "address"
      }
    ],
    "outputs": [
      {
        "name": "roles",
        "type": "uint256",
        "internalType": "uint256"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "setGasValues",
    "inputs": [
      {
        "name": "_hookCallGasLimit",
        "type": "uint32",
        "internalType": "uint32"
      },
      {
        "name": "_hookGasBuffer",
        "type": "uint32",
        "internalType": "uint32"
      },
      {
        "name": "_supportsInterfaceGasLimit",
        "type": "uint32",
        "internalType": "uint32"
      }
    ],
    "outputs": [],
    "stateMutability": "nonpayable"
  },
  {
    "type": "function",
    "name": "transferOwnership",
    "inputs": [
      {
        "name": "newOwner",
        "type": "address",
        "internalType": "address"
      }
    ],
    "outputs": [],
    "stateMutability": "payable"
  },
  {
    "type": "function",
    "name": "unpause",
    "inputs": [
      {
        "name": "map",
        "type": "uint256",
        "internalType": "uint256"
      }
    ],
    "outputs": [],
    "stateMutability": "nonpayable"
  },
  {
    "type": "function",
    "name": "unpauseVault",
    "inputs": [
      {
        "name": "vault",
        "type": "address",
        "internalType": "contract IKarakBaseVault"
      },
      {
        "name": "map",
        "type": "uint256",
        "internalType": "uint256"
      }
    ],
    "outputs": [],
    "stateMutability": "nonpayable"
  },
  {
    "type": "function",
    "name": "unregisterOperatorFromDSS",
    "inputs": [
      {
        "name": "dss",
        "type": "address",
        "internalType": "contract IDSS"
      }
    ],
    "outputs": [],
    "stateMutability": "nonpayable"
  },
  {
    "type": "event",
    "name": "AllowlistedAssets",
    "inputs": [
      {
        "name": "assets",
        "type": "address[]",
        "indexed": false,
        "internalType": "address[]"
      },
      {
        "name": "slashingHandlers",
        "type": "address[]",
        "indexed": false,
        "internalType": "address[]"
      }
    ],
    "anonymous": false
  },
  {
    "type": "event",
    "name": "AllowlistedVaultImpl",
    "inputs": [
      {
        "name": "vaultImpl",
        "type": "address",
        "indexed": false,
        "internalType": "address"
      }
    ],
    "anonymous": false
  },
  {
    "type": "event",
    "name": "CancelledSlashing",
    "inputs": [
      {
        "name": "canceller",
        "type": "address",
        "indexed": false,
        "internalType": "address"
      },
      {
        "name": "queuedSlashing",
        "type": "tuple",
        "indexed": false,
        "internalType": "struct SlasherLib.QueuedSlashing",
        "components": [
          {
            "name": "dss",
            "type": "address",
            "internalType": "contract IDSS"
          },
          {
            "name": "timestamp",
            "type": "uint96",
            "internalType": "uint96"
          },
          {
            "name": "operator",
            "type": "address",
            "internalType": "address"
          },
          {
            "name": "vaults",
            "type": "address[]",
            "internalType": "address[]"
          },
          {
            "name": "slashPercentagesWad",
            "type": "uint96[]",
            "internalType": "uint96[]"
          },
          {
            "name": "nonce",
            "type": "uint256",
            "internalType": "uint256"
          }
        ]
      }
    ],
    "anonymous": false
  },
  {
    "type": "event",
    "name": "DSSRegistered",
    "inputs": [
      {
        "name": "dss",
        "type": "address",
        "indexed": false,
        "internalType": "address"
      },
      {
        "name": "maxSlashablePercentageWad",
        "type": "uint256",
        "indexed": false,
        "internalType": "uint256"
      }
    ],
    "anonymous": false
  },
  {
    "type": "event",
    "name": "DeployedVault",
    "inputs": [
      {
        "name": "operator",
        "type": "address",
        "indexed": false,
        "internalType": "address"
      },
      {
        "name": "vault",
        "type": "address",
        "indexed": false,
        "internalType": "address"
      },
      {
        "name": "asset",
        "type": "address",
        "indexed": false,
        "internalType": "address"
      }
    ],
    "anonymous": false
  },
  {
    "type": "event",
    "name": "FinalizedSlashing",
    "inputs": [
      {
        "name": "finisher",
        "type": "address",
        "indexed": false,
        "internalType": "address"
      },
      {
        "name": "queuedSlashing",
        "type": "tuple",
        "indexed": false,
        "internalType": "struct SlasherLib.QueuedSlashing",
        "components": [
          {
            "name": "dss",
            "type": "address",
            "internalType": "contract IDSS"
          },
          {
            "name": "timestamp",
            "type": "uint96",
            "internalType": "uint96"
          },
          {
            "name": "operator",
            "type": "address",
            "internalType": "address"
          },
          {
            "name": "vaults",
            "type": "address[]",
            "internalType": "address[]"
          },
          {
            "name": "slashPercentagesWad",
            "type": "uint96[]",
            "internalType": "uint96[]"
          },
          {
            "name": "nonce",
            "type": "uint256",
            "internalType": "uint256"
          }
        ]
      }
    ],
    "anonymous": false
  },
  {
    "type": "event",
    "name": "FinishedStakeUpdate",
    "inputs": [
      {
        "name": "updateRequest",
        "type": "tuple",
        "indexed": false,
        "internalType": "struct Operator.QueuedStakeUpdate",
        "components": [
          {
            "name": "nonce",
            "type": "uint48",
            "internalType": "uint48"
          },
          {
            "name": "startTimestamp",
            "type": "uint48",
            "internalType": "uint48"
          },
          {
            "name": "operator",
            "type": "address",
            "internalType": "address"
          },
          {
            "name": "updateRequest",
            "type": "tuple",
            "internalType": "struct Operator.StakeUpdateRequest",
            "components": [
              {
                "name": "vault",
                "type": "address",
                "internalType": "address"
              },
              {
                "name": "dss",
                "type": "address",
                "internalType": "contract IDSS"
              },
              {
                "name": "toStake",
                "type": "bool",
                "internalType": "bool"
              }
            ]
          }
        ]
      }
    ],
    "anonymous": false
  },
  {
    "type": "event",
    "name": "GasValuesUpdated",
    "inputs": [
      {
        "name": "hookCallGasLimit",
        "type": "uint32",
        "indexed": false,
        "internalType": "uint32"
      },
      {
        "name": "supportsInterfaceGasLimit",
        "type": "uint32",
        "indexed": false,
        "internalType": "uint32"
      },
      {
        "name": "hookGasBuffer",
        "type": "uint32",
        "indexed": false,
        "internalType": "uint32"
      }
    ],
    "anonymous": false
  },
  {
    "type": "event",
    "name": "HookCallFailed",
    "inputs": [
      {
        "name": "returnData",
        "type": "bytes32",
        "indexed": false,
        "internalType": "bytes32"
      }
    ],
    "anonymous": false
  },
  {
    "type": "event",
    "name": "HookCallSucceeded",
    "inputs": [
      {
        "name": "returnData",
        "type": "bytes32",
        "indexed": false,
        "internalType": "bytes32"
      }
    ],
    "anonymous": false
  },
  {
    "type": "event",
    "name": "InitializeCore",
    "inputs": [
      {
        "name": "owner",
        "type": "address",
        "indexed": false,
        "internalType": "address"
      },
      {
        "name": "vaultImpl",
        "type": "address",
        "indexed": false,
        "internalType": "address"
      },
      {
        "name": "manager",
        "type": "address",
        "indexed": false,
        "internalType": "address"
      },
      {
        "name": "vetoCommittee",
        "type": "address",
        "indexed": false,
        "internalType": "address"
      },
      {
        "name": "hookCallGasLimit",
        "type": "uint32",
        "indexed": false,
        "internalType": "uint32"
      },
      {
        "name": "supportsInterfaceGasLimit",
        "type": "uint32",
        "indexed": false,
        "internalType": "uint32"
      },
      {
        "name": "hookGasBuffer",
        "type": "uint32",
        "indexed": false,
        "internalType": "uint32"
      }
    ],
    "anonymous": false
  },
  {
    "type": "event",
    "name": "Initialized",
    "inputs": [
      {
        "name": "version",
        "type": "uint64",
        "indexed": false,
        "internalType": "uint64"
      }
    ],
    "anonymous": false
  },
  {
    "type": "event",
    "name": "InterfaceNotSupported",
    "inputs": [],
    "anonymous": false
  },
  {
    "type": "event",
    "name": "NewVault",
    "inputs": [
      {
        "name": "vault",
        "type": "address",
        "indexed": false,
        "internalType": "address"
      },
      {
        "name": "implementation",
        "type": "address",
        "indexed": false,
        "internalType": "address"
      }
    ],
    "anonymous": false
  },
  {
    "type": "event",
    "name": "OwnershipHandoverCanceled",
    "inputs": [
      {
        "name": "pendingOwner",
        "type": "address",
        "indexed": true,
        "internalType": "address"
      }
    ],
    "anonymous": false
  },
  {
    "type": "event",
    "name": "OwnershipHandoverRequested",
    "inputs": [
      {
        "name": "pendingOwner",
        "type": "address",
        "indexed": true,
        "internalType": "address"
      }
    ],
    "anonymous": false
  },
  {
    "type": "event",
    "name": "OwnershipTransferred",
    "inputs": [
      {
        "name": "oldOwner",
        "type": "address",
        "indexed": true,
        "internalType": "address"
      },
      {
        "name": "newOwner",
        "type": "address",
        "indexed": true,
        "internalType": "address"
      }
    ],
    "anonymous": false
  },
  {
    "type": "event",
    "name": "Paused",
    "inputs": [
      {
        "name": "account",
        "type": "address",
        "indexed": false,
        "internalType": "address"
      },
      {
        "name": "map",
        "type": "uint256",
        "indexed": false,
        "internalType": "uint256"
      }
    ],
    "anonymous": false
  },
  {
    "type": "event",
    "name": "RegisteredOperatorToDSS",
    "inputs": [
      {
        "name": "operator",
        "type": "address",
        "indexed": false,
        "internalType": "address"
      },
      {
        "name": "dss",
        "type": "address",
        "indexed": false,
        "internalType": "address"
      }
    ],
    "anonymous": false
  },
  {
    "type": "event",
    "name": "RequestedSlashing",
    "inputs": [
      {
        "name": "dss",
        "type": "address",
        "indexed": false,
        "internalType": "address"
      },
      {
        "name": "requestSlashing",
        "type": "tuple",
        "indexed": false,
        "internalType": "struct SlasherLib.SlashRequest",
        "components": [
          {
            "name": "operator",
            "type": "address",
            "internalType": "address"
          },
          {
            "name": "slashPercentagesWad",
            "type": "uint96[]",
            "internalType": "uint96[]"
          },
          {
            "name": "vaults",
            "type": "address[]",
            "internalType": "address[]"
          }
        ]
      }
    ],
    "anonymous": false
  },
  {
    "type": "event",
    "name": "RequestedStakeUpdate",
    "inputs": [
      {
        "name": "updateRequest",
        "type": "tuple",
        "indexed": false,
        "internalType": "struct Operator.QueuedStakeUpdate",
        "components": [
          {
            "name": "nonce",
            "type": "uint48",
            "internalType": "uint48"
          },
          {
            "name": "startTimestamp",
            "type": "uint48",
            "internalType": "uint48"
          },
          {
            "name": "operator",
            "type": "address",
            "internalType": "address"
          },
          {
            "name": "updateRequest",
            "type": "tuple",
            "internalType": "struct Operator.StakeUpdateRequest",
            "components": [
              {
                "name": "vault",
                "type": "address",
                "internalType": "address"
              },
              {
                "name": "dss",
                "type": "address",
                "internalType": "contract IDSS"
              },
              {
                "name": "toStake",
                "type": "bool",
                "internalType": "bool"
              }
            ]
          }
        ]
      }
    ],
    "anonymous": false
  },
  {
    "type": "event",
    "name": "RolesUpdated",
    "inputs": [
      {
        "name": "user",
        "type": "address",
        "indexed": true,
        "internalType": "address"
      },
      {
        "name": "roles",
        "type": "uint256",
        "indexed": true,
        "internalType": "uint256"
      }
    ],
    "anonymous": false
  },
  {
    "type": "event",
    "name": "SkippedSlashing",
    "inputs": [
      {
        "name": "vault",
        "type": "address",
        "indexed": false,
        "internalType": "address"
      }
    ],
    "anonymous": false
  },
  {
    "type": "event",
    "name": "Unpaused",
    "inputs": [
      {
        "name": "account",
        "type": "address",
        "indexed": false,
        "internalType": "address"
      },
      {
        "name": "map",
        "type": "uint256",
        "indexed": false,
        "internalType": "uint256"
      }
    ],
    "anonymous": false
  },
  {
    "type": "event",
    "name": "UnregisteredOperatorToDSS",
    "inputs": [
      {
        "name": "operator",
        "type": "address",
        "indexed": false,
        "internalType": "address"
      },
      {
        "name": "dss",
        "type": "address",
        "indexed": false,
        "internalType": "address"
      }
    ],
    "anonymous": false
  },
  {
    "type": "event",
    "name": "UpgradedAllVaults",
    "inputs": [
      {
        "name": "implementation",
        "type": "address",
        "indexed": false,
        "internalType": "address"
      }
    ],
    "anonymous": false
  },
  {
    "type": "event",
    "name": "UpgradedVault",
    "inputs": [
      {
        "name": "implementation",
        "type": "address",
        "indexed": false,
        "internalType": "address"
      },
      {
        "name": "vault",
        "type": "address",
        "indexed": false,
        "internalType": "address"
      }
    ],
    "anonymous": false
  },
  {
    "type": "error",
    "name": "AlreadyInitialized",
    "inputs": []
  },
  {
    "type": "error",
    "name": "AssetNotAllowlisted",
    "inputs": []
  },
  {
    "type": "error",
    "name": "AttemptedPauseWhileUnpausing",
    "inputs": []
  },
  {
    "type": "error",
    "name": "AttemptedUnpauseWhilePausing",
    "inputs": []
  },
  {
    "type": "error",
    "name": "DSSAlreadyRegistered",
    "inputs": []
  },
  {
    "type": "error",
    "name": "DSSHookCallReverted",
    "inputs": [
      {
        "name": "revertReason",
        "type": "bytes32",
        "internalType": "bytes32"
      }
    ]
  },
  {
    "type": "error",
    "name": "DSSNotRegistered",
    "inputs": []
  },
  {
    "type": "error",
    "name": "DuplicateSlashingVaults",
    "inputs": []
  },
  {
    "type": "error",
    "name": "EmptyArray",
    "inputs": []
  },
  {
    "type": "error",
    "name": "EnforcedPause",
    "inputs": []
  },
  {
    "type": "error",
    "name": "EnforcedPauseFunction",
    "inputs": [
      {
        "name": "functionIndex",
        "type": "uint8",
        "internalType": "uint8"
      }
    ]
  },
  {
    "type": "error",
    "name": "InvalidInitialization",
    "inputs": []
  },
  {
    "type": "error",
    "name": "InvalidSlashingCount",
    "inputs": []
  },
  {
    "type": "error",
    "name": "InvalidSlashingParams",
    "inputs": []
  },
  {
    "type": "error",
    "name": "LengthsDontMatch",
    "inputs": []
  },
  {
    "type": "error",
    "name": "MathOverflowedMulDiv",
    "inputs": []
  },
  {
    "type": "error",
    "name": "MaxSlashPercentageWadBreached",
    "inputs": []
  },
  {
    "type": "error",
    "name": "MaxSlashableVaultsPerRequestBreached",
    "inputs": []
  },
  {
    "type": "error",
    "name": "MaxVaultCapacityReached",
    "inputs": []
  },
  {
    "type": "error",
    "name": "MinSlashingDelayNotPassed",
    "inputs": []
  },
  {
    "type": "error",
    "name": "NewOwnerIsZeroAddress",
    "inputs": []
  },
  {
    "type": "error",
    "name": "NoHandoverRequest",
    "inputs": []
  },
  {
    "type": "error",
    "name": "NotEnoughGas",
    "inputs": []
  },
  {
    "type": "error",
    "name": "NotInitializing",
    "inputs": []
  },
  {
    "type": "error",
    "name": "NotSmartContract",
    "inputs": []
  },
  {
    "type": "error",
    "name": "OperatorNotValidatingForDSS",
    "inputs": []
  },
  {
    "type": "error",
    "name": "Reentrancy",
    "inputs": []
  },
  {
    "type": "error",
    "name": "ReservedAddress",
    "inputs": []
  },
  {
    "type": "error",
    "name": "SlashingCooldownNotPassed",
    "inputs": []
  },
  {
    "type": "error",
    "name": "Unauthorized",
    "inputs": []
  },
  {
    "type": "error",
    "name": "VaultCreationFailedAddrMismatch",
    "inputs": [
      {
        "name": "expected",
        "type": "address",
        "internalType": "address"
      },
      {
        "name": "actual",
        "type": "address",
        "internalType": "address"
      }
    ]
  },
  {
    "type": "error",
    "name": "VaultImplNotAllowlisted",
    "inputs": []
  },
  {
    "type": "error",
    "name": "VaultNotAChildVault",
    "inputs": []
  },
  {
    "type": "error",
    "name": "VaultNotStakedToDSS",
    "inputs": []
  },
  {
    "type": "error",
    "name": "ZeroAddress",
    "inputs": []
  },
  {
    "type": "error",
    "name": "ZeroSlashPercentageWad",
    "inputs": []
  }
]
